[{"/Users/mengfanwang/Desktop/mengfw.github.io/src/index.js":"1","/Users/mengfanwang/Desktop/mengfw.github.io/src/reportWebVitals.js":"2","/Users/mengfanwang/Desktop/mengfw.github.io/src/App.js":"3","/Users/mengfanwang/Desktop/mengfw.github.io/src/editable-stuff/config.js":"4","/Users/mengfanwang/Desktop/mengfw.github.io/src/components/home/GetInTouch.jsx":"5","/Users/mengfanwang/Desktop/mengfw.github.io/src/components/home/Leadership.jsx":"6","/Users/mengfanwang/Desktop/mengfw.github.io/src/components/Navbar.jsx":"7","/Users/mengfanwang/Desktop/mengfw.github.io/src/components/Footer.jsx":"8","/Users/mengfanwang/Desktop/mengfw.github.io/src/components/home/AboutMe.jsx":"9","/Users/mengfanwang/Desktop/mengfw.github.io/src/components/home/Skills.jsx":"10","/Users/mengfanwang/Desktop/mengfw.github.io/src/components/home/Experience.jsx":"11","/Users/mengfanwang/Desktop/mengfw.github.io/src/components/home/MainBody.jsx":"12","/Users/mengfanwang/Desktop/mengfw.github.io/src/components/home/Project.jsx":"13","/Users/mengfanwang/Desktop/mengfw.github.io/src/components/home/migration.jsx":"14","/Users/mengfanwang/Desktop/mengfw.github.io/src/hooks/useResizeObserver.js":"15","/Users/mengfanwang/Desktop/mengfw.github.io/src/hooks/useScrollPosition.js":"16","/Users/mengfanwang/Desktop/mengfw.github.io/src/components/home/ProjectCard.jsx":"17","/Users/mengfanwang/Desktop/mengfw.github.io/src/hooks/useIsomorphicLayoutEffect.js":"18"},{"size":542,"mtime":1682652864000,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1682652864000,"results":"21","hashOfConfig":"20"},{"size":2633,"mtime":1690074983660,"results":"22","hashOfConfig":"20"},{"size":8651,"mtime":1692406016696,"results":"23","hashOfConfig":"20"},{"size":356,"mtime":1689634419489,"results":"24","hashOfConfig":"20"},{"size":1654,"mtime":1682652864000,"results":"25","hashOfConfig":"20"},{"size":2812,"mtime":1682652864000,"results":"26","hashOfConfig":"20"},{"size":876,"mtime":1682652864000,"results":"27","hashOfConfig":"20"},{"size":2212,"mtime":1682652864000,"results":"28","hashOfConfig":"20"},{"size":1098,"mtime":1682652864000,"results":"29","hashOfConfig":"20"},{"size":844,"mtime":1690074697721,"results":"30","hashOfConfig":"20"},{"size":1715,"mtime":1682652864000,"results":"31","hashOfConfig":"20"},{"size":981,"mtime":1682652864000,"results":"32","hashOfConfig":"20"},{"size":618,"mtime":1682652864000,"results":"33","hashOfConfig":"20"},{"size":534,"mtime":1682652864000,"results":"34","hashOfConfig":"20"},{"size":1501,"mtime":1682652864000,"results":"35","hashOfConfig":"20"},{"size":2610,"mtime":1690090558620,"results":"36","hashOfConfig":"20"},{"size":155,"mtime":1682652864000,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"1x63lws",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"41"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"41"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"/Users/mengfanwang/Desktop/mengfw.github.io/src/index.js",[],[],[],"/Users/mengfanwang/Desktop/mengfw.github.io/src/reportWebVitals.js",[],[],"/Users/mengfanwang/Desktop/mengfw.github.io/src/App.js",[],[],"/Users/mengfanwang/Desktop/mengfw.github.io/src/editable-stuff/config.js",[],[],"/Users/mengfanwang/Desktop/mengfw.github.io/src/components/home/GetInTouch.jsx",[],[],"/Users/mengfanwang/Desktop/mengfw.github.io/src/components/home/Leadership.jsx",[],[],"/Users/mengfanwang/Desktop/mengfw.github.io/src/components/Navbar.jsx",[],[],"/Users/mengfanwang/Desktop/mengfw.github.io/src/components/Footer.jsx",[],[],"/Users/mengfanwang/Desktop/mengfw.github.io/src/components/home/AboutMe.jsx",[],[],"/Users/mengfanwang/Desktop/mengfw.github.io/src/components/home/Skills.jsx",["97","98"],[],"import React from \"react\";\nimport { Jumbotron } from \"./migration\";\nimport { Container } from \"react-bootstrap\";\nimport DevIcon from \"devicon-react-svg\";\nimport { useScrollPosition } from \"../../hooks/useScrollPosition\";\n\nconst devIconStyle = {\n  width: \"150px\",\n  padding: '10px'\n};\n\nconst Skills = React.forwardRef(({ heading, hardSkills }, ref) => {\n  const skillsTabRef = React.useRef(null);\n  const [isScrolled, setIsScrolled] = React.useState(false);\n  //const navbarDimensions = useResizeObserver(navbarMenuRef);\n\n  useScrollPosition(\n    ({ prevPos, currPos }) => {\n      if (!isScrolled && currPos.y - 400 < 0) setIsScrolled(true);\n    },\n    [],\n    skillsTabRef\n  );\n  return (\n    <Jumbotron ref={skillsTabRef} fluid className=\"bg-white m-0\" id=\"skills\">\n    <Container className=\"p-5 \">\n      <h2 ref={skillsTabRef} className=\"display-4 pb-5 text-center\">\n        {heading}\n      </h2>\n      {hardSkills.map((skill, index) => {\n        return (<img style={devIconStyle} src={skill}/>)\n      })}\n      \n      \n          \n    </Container>\n  </Jumbotron>\n  );\n});\n\nexport default Skills;\n","/Users/mengfanwang/Desktop/mengfw.github.io/src/components/home/Experience.jsx",["99"],[],"import React from 'react';\nimport { Jumbotron } from './migration';\nimport {\n  Container,\n  Row,\n} from \"react-bootstrap\";\nimport { about } from \"../../editable-stuff/config.js\";\n\nconst Experience = ({ experiences }) => {\n  return (\n    <section className=\"section\">\n      <Container>\n        <Jumbotron className=\"bg-white\">\n          <h2 className=\"display-4 mb-5 text-center\">\n            {experiences.heading}\n          </h2>\n          <Row>\n            <a\n                className=\"btn btn-outline-dark btn-lg\"\n                href={experiences.timeline}\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n                role=\"button\"\n                aria-label=\"Timeline\">\n                My Time Line</a>\n          </Row>\n\n        </Jumbotron>\n      </Container>\n    </section>\n  );\n}\n\nexport default Experience;","/Users/mengfanwang/Desktop/mengfw.github.io/src/components/home/MainBody.jsx",[],[],"/Users/mengfanwang/Desktop/mengfw.github.io/src/components/home/Project.jsx",["100"],[],"import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport { Jumbotron } from \"./migration\";\nimport Row from \"react-bootstrap/Row\";\nimport ProjectCard from \"./ProjectCard\";\n\n\nconst API = \"https://api.github.com\";\n// const gitHubQuery = \"/repos?sort=updated&direction=desc\";\n// const specficQuerry = \"https://api.github.com/repos/hashirshoaeb/\";\n\n\nconst Project = ({ heading, specific }) => {\n  const projectsArray = specific\n  \n  return (\n    <Jumbotron fluid id=\"projects\" className=\"bg-light m-0\">\n      <Container className=\"\">\n        <h2 className=\"display-4 pb-5 text-center\">{heading}</h2>\n        <Row>\n          {\n            projectsArray.map((project, index) => (\n              <ProjectCard\n                key={`project-card-${index}`}\n                id={`project-card-${index}`}\n                value={project}\n              />\n            ))\n            }\n        </Row>\n      </Container>\n    </Jumbotron>\n  );\n};\n\nexport default Project;\n","/Users/mengfanwang/Desktop/mengfw.github.io/src/components/home/migration.jsx",[],[],"/Users/mengfanwang/Desktop/mengfw.github.io/src/hooks/useResizeObserver.js",[],[],"/Users/mengfanwang/Desktop/mengfw.github.io/src/hooks/useScrollPosition.js",[],[],"/Users/mengfanwang/Desktop/mengfw.github.io/src/components/home/ProjectCard.jsx",["101","102"],[],"import React from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Skeleton from \"react-loading-skeleton\";\n\nconst ProjectCard = ({ value }) => {\n  const {\n    name,\n    description,\n    youtube,\n    image,\n    repo,\n    devpost,\n    keywords,\n    cardType,\n  } = value;\n\n  return (\n    <Col md={4}>\n      <Card className=\"card shadow-lg p-3 mb-5 bg-white rounded\">\n        <Card.Body>\n          <Card.Title as=\"h5\">{name || <Skeleton />} </Card.Title>\n          {(!image) ? \"\":             \n          <div className=\"col-5 d-none d-lg-block align-self-center\">\n            <img\n              className=\"border border-secondary rounded\"\n              src={image}\n              alt=\"image\"\n              width={200}\n              height={100}\n            />\n        </div>}\n          {(!youtube) ? \"\" : \n            <iframe class=\"responsive-iframe\" width='100%' src={youtube} title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen />}\n          <Card.Text>{(!description) ? \"\" : description || <Skeleton count={3} />} </Card.Text>\n          <hr />\n          <Keyword keywords={keywords} />\n          <CardButtons repo={repo} devpost={devpost} cardType={cardType}/>\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n};\n\nconst CardButtons = ({ repo, devpost, cardType }) => {\n  if (cardType){\n    return (\n      <div className=\"d-grid gap-2 d-md-block\">\n        <a href={repo} target=\" _blank\" className=\"btn btn-outline-secondary mx-2\">\n          <i className=\"fab fa-github\" /> Repo\n        </a>\n        <a href={devpost} target=\" _blank\" className=\"btn btn-outline-secondary mx-2\">\n          <i /> Paper\n        </a>\n      </div>\n    );       \n  }\n  return (\n    <div className=\"d-grid gap-2 d-md-block\">\n      <a href={repo} target=\" _blank\" className=\"btn btn-outline-secondary mx-2\">\n        <i className=\"fab fa-github\" /> Repo\n      </a>\n      <a href={devpost} target=\" _blank\" className=\"btn btn-outline-secondary mx-2\">\n        <i /> Devpost\n      </a>\n    </div>\n  );\n};\n\n\nconst Keyword = ({ keywords }) => {\n  return (\n    <div className=\"pb-3\">\n      Keywords:{\" \"}\n      {keywords.map((keyword) => (\n          <a\n            key={keyword}\n            className=\"card-link\"\n            target=\" _blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <span className=\"badge bg-light text-dark\">\n              {keyword}\n            </span>\n          </a>\n        ))\n        }\n    </div>\n  );\n};\n\nexport default ProjectCard;\n","/Users/mengfanwang/Desktop/mengfw.github.io/src/hooks/useIsomorphicLayoutEffect.js",[],[],{"ruleId":"103","severity":1,"message":"104","line":4,"column":8,"nodeType":"105","messageId":"106","endLine":4,"endColumn":15},{"ruleId":"107","severity":1,"message":"108","line":31,"column":17,"nodeType":"109","endLine":31,"endColumn":56},{"ruleId":"103","severity":1,"message":"110","line":7,"column":10,"nodeType":"105","messageId":"106","endLine":7,"endColumn":15},{"ruleId":"103","severity":1,"message":"111","line":8,"column":7,"nodeType":"105","messageId":"106","endLine":8,"endColumn":10},{"ruleId":"112","severity":1,"message":"113","line":25,"column":13,"nodeType":"109","endLine":31,"endColumn":15},{"ruleId":"114","severity":1,"message":"115","line":76,"column":11,"nodeType":"109","endLine":81,"endColumn":12},"no-unused-vars","'DevIcon' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'about' is defined but never used.","'API' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md"]