{"ast":null,"code":"import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { getAttributes, isStructTreeNode, isStructTreeNodeWithOnlyContentChild } from './shared/structTreeUtils';\nexport default function StructTreeItem(_ref) {\n  let {\n    className,\n    node\n  } = _ref;\n  const attributes = useMemo(() => getAttributes(node), [node]);\n  const children = useMemo(() => {\n    if (!isStructTreeNode(node)) {\n      return null;\n    }\n\n    if (isStructTreeNodeWithOnlyContentChild(node)) {\n      return null;\n    }\n\n    return node.children.map((child, index) => {\n      return (// eslint-disable-next-line react/no-array-index-key\n        React.createElement(StructTreeItem, {\n          key: index,\n          node: child\n        })\n      );\n    });\n  }, [node]);\n  return React.createElement(\"span\", Object.assign({\n    className: className\n  }, attributes), children);\n}\nStructTreeItem.propTypes = {\n  node: PropTypes.oneOfType([PropTypes.shape({\n    children: PropTypes.object,\n    role: PropTypes.string\n  }), PropTypes.shape({\n    id: PropTypes.string,\n    type: PropTypes.string\n  })]).isRequired\n};","map":{"version":3,"names":["React","useMemo","PropTypes","getAttributes","isStructTreeNode","isStructTreeNodeWithOnlyContentChild","StructTreeItem","className","node","attributes","children","map","child","index","createElement","key","Object","assign","propTypes","oneOfType","shape","object","role","string","id","type","isRequired"],"sources":["/Users/mengfanwang/Desktop/mengfw.github.io/node_modules/react-pdf/dist/esm/StructTreeItem.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { getAttributes, isStructTreeNode, isStructTreeNodeWithOnlyContentChild, } from './shared/structTreeUtils';\nexport default function StructTreeItem({ className, node }) {\n    const attributes = useMemo(() => getAttributes(node), [node]);\n    const children = useMemo(() => {\n        if (!isStructTreeNode(node)) {\n            return null;\n        }\n        if (isStructTreeNodeWithOnlyContentChild(node)) {\n            return null;\n        }\n        return node.children.map((child, index) => {\n            return (\n            // eslint-disable-next-line react/no-array-index-key\n            React.createElement(StructTreeItem, { key: index, node: child }));\n        });\n    }, [node]);\n    return (React.createElement(\"span\", Object.assign({ className: className }, attributes), children));\n}\nStructTreeItem.propTypes = {\n    node: PropTypes.oneOfType([\n        PropTypes.shape({\n            children: PropTypes.object,\n            role: PropTypes.string,\n        }),\n        PropTypes.shape({\n            id: PropTypes.string,\n            type: PropTypes.string,\n        }),\n    ]).isRequired,\n};\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,EAAwBC,gBAAxB,EAA0CC,oCAA1C,QAAuF,0BAAvF;AACA,eAAe,SAASC,cAAT,OAA6C;EAAA,IAArB;IAAEC,SAAF;IAAaC;EAAb,CAAqB;EACxD,MAAMC,UAAU,GAAGR,OAAO,CAAC,MAAME,aAAa,CAACK,IAAD,CAApB,EAA4B,CAACA,IAAD,CAA5B,CAA1B;EACA,MAAME,QAAQ,GAAGT,OAAO,CAAC,MAAM;IAC3B,IAAI,CAACG,gBAAgB,CAACI,IAAD,CAArB,EAA6B;MACzB,OAAO,IAAP;IACH;;IACD,IAAIH,oCAAoC,CAACG,IAAD,CAAxC,EAAgD;MAC5C,OAAO,IAAP;IACH;;IACD,OAAOA,IAAI,CAACE,QAAL,CAAcC,GAAd,CAAkB,CAACC,KAAD,EAAQC,KAAR,KAAkB;MACvC,OACA;QACAb,KAAK,CAACc,aAAN,CAAoBR,cAApB,EAAoC;UAAES,GAAG,EAAEF,KAAP;UAAcL,IAAI,EAAEI;QAApB,CAApC;MAFA;IAGH,CAJM,CAAP;EAKH,CAZuB,EAYrB,CAACJ,IAAD,CAZqB,CAAxB;EAaA,OAAQR,KAAK,CAACc,aAAN,CAAoB,MAApB,EAA4BE,MAAM,CAACC,MAAP,CAAc;IAAEV,SAAS,EAAEA;EAAb,CAAd,EAAwCE,UAAxC,CAA5B,EAAiFC,QAAjF,CAAR;AACH;AACDJ,cAAc,CAACY,SAAf,GAA2B;EACvBV,IAAI,EAAEN,SAAS,CAACiB,SAAV,CAAoB,CACtBjB,SAAS,CAACkB,KAAV,CAAgB;IACZV,QAAQ,EAAER,SAAS,CAACmB,MADR;IAEZC,IAAI,EAAEpB,SAAS,CAACqB;EAFJ,CAAhB,CADsB,EAKtBrB,SAAS,CAACkB,KAAV,CAAgB;IACZI,EAAE,EAAEtB,SAAS,CAACqB,MADF;IAEZE,IAAI,EAAEvB,SAAS,CAACqB;EAFJ,CAAhB,CALsB,CAApB,EASHG;AAVoB,CAA3B"},"metadata":{},"sourceType":"module"}